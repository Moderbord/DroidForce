//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.12 at 01:48:04 PM CEST 
//


package de.tum.in.i22.uc.pdp.xsd;

import ae.javax.xml.bind.annotation.XmlAccessType;
import ae.javax.xml.bind.annotation.XmlAccessorType;
import ae.javax.xml.bind.annotation.XmlAttribute;
import ae.javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ExecuteAsyncActionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ExecuteAsyncActionType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www22.in.tum.de/enforcementLanguage}ExecuteActionType">
 *       &lt;attribute name="processor" type="{http://www22.in.tum.de/enforcementLanguage}ExecutorProcessors" default="pxp" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExecuteAsyncActionType")
public class ExecuteAsyncActionType
    extends ExecuteActionType
{

    @XmlAttribute(name = "processor")
    protected ExecutorProcessors processor;

    /**
     * Gets the value of the processor property.
     * 
     * @return
     *     possible object is
     *     {@link ExecutorProcessors }
     *     
     */
    public ExecutorProcessors getProcessor() {
        if (processor == null) {
            return ExecutorProcessors.PXP;
        } else {
            return processor;
        }
    }

    /**
     * Sets the value of the processor property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExecutorProcessors }
     *     
     */
    public void setProcessor(ExecutorProcessors value) {
        this.processor = value;
    }

    public boolean isSetProcessor() {
        return (this.processor!= null);
    }

}
